{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["TOP_CENTER","Dimensions","get","height","POSITION","ABSOLUTE","BOTTOM","TOP","CENTER","ToastContainer","config","toastInstance","_root","showToast","getModalState","closeToast","props","state","fadeAnim","Animated","Value","modalVisible","position","opacity","width","elevation","paddingHorizontal","Platform","OS","PLATFORM","IOS","top","undefined","bottom","getTop","buttonText","trim","length","setState","text","getButtonText","type","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","onClose","customView","closeTimeout","clearTimeout","duration","setTimeout","bind","timing","toValue","start","reason","closeModal","getToastStyle","Component","propTypes","ViewPropTypes","PropTypes","oneOfType","object","number","array","StyledToastContainer","mapPropsToStyleNames"],"mappings":"u2BACA,4B,2CACA,qC,mDACA,yCACA,iEACA,mE,yEACA,2DAEA,4BACA,gCACA,8B,skCAEA,GAAMA,YAAcC,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,CAAkC,CAAnC,CAAwC,EAA3D,CAEA,GAAMC,UAAW,CACfC,SAAU,UADK,CAEfC,OAAQ,QAFO,CAGfC,IAAK,KAHU,CAIfC,OAAQ,QAJO,CAAjB,C,GAOMC,e,kIAEuB,IAAVC,OAAU,mCACzB,KAAKC,aAAL,CAAmBC,KAAnB,CAAyBC,SAAzB,CAAmC,CAAEH,aAAF,CAAnC,EACD,C,mCACa,CACZ,GAAI,KAAKC,aAAL,CAAmBC,KAAnB,CAAyBE,aAAzB,EAAJ,CAA8C,CAC5C,KAAKH,aAAL,CAAmBC,KAAnB,CAAyBG,UAAzB,CAAoC,cAApC,EACD,CACF,C,IACD,wBAAYC,KAAZ,CAAmB,4JACXA,KADW,GAGjB,MAAKC,KAAL,CAAa,CACXC,SAAU,GAAIC,uBAASC,KAAb,CAAmB,CAAnB,CADC,CAEXC,aAAc,KAFH,CAAb,CAHiB,aAOlB,C,gFAEe,CACd,MAAO,CACLC,SAAUlB,SAASC,QADd,CAELkB,QAAS,KAAKN,KAAL,CAAWC,QAFf,CAGLM,MAAO,MAHF,CAILC,UAAW,CAJN,CAKLC,kBAAmBC,sBAASC,EAAT,GAAgBC,sBAASC,GAAzB,CAA+B,EAA/B,CAAoC,CALlD,CAMLC,IAAK,KAAKd,KAAL,CAAWK,QAAX,GAAwBlB,SAASG,GAAjC,CAAuC,EAAvC,CAA6C,KAAKU,KAAL,CAAWK,QAAX,GAAwBlB,SAASI,MAAjC,CAA0CR,UAA1C,CAAwDgC,SANrG,CAOLC,OACE,KAAKhB,KAAL,CAAWK,QAAX,GAAwBlB,SAASE,MAAjC,CAA0C,KAAK4B,MAAL,EAA1C,CAA0DF,SARvD,CAAP,CAUD,C,uCAEQ,CACP,GAAIL,sBAASC,EAAT,GAAgBC,sBAASC,GAA7B,CAAkC,CAChC,MAAO,GAAP,CACD,CACD,MAAO,EAAP,CACD,C,oDAEaK,U,CAAY,CACxB,GAAIA,UAAJ,CAAgB,CACd,GAAIA,WAAWC,IAAX,GAAkBC,MAAlB,GAA6B,CAAjC,CAAoC,CAClC,MAAOL,UAAP,CACD,CACD,MAAOG,WAAP,CACD,CACD,MAAOH,UAAP,CACD,C,qDACe,CACd,MAAO,MAAKf,KAAL,CAAWI,YAAlB,CACD,C,kDAEqB,IAAVX,OAAU,OAAVA,MAAU,CACpB,KAAK4B,QAAL,CAAc,CACZjB,aAAc,IADF,CAEZkB,KAAM7B,OAAO6B,IAFD,CAGZJ,WAAY,KAAKK,aAAL,CAAmB9B,OAAOyB,UAA1B,CAHA,CAIZM,KAAM/B,OAAO+B,IAJD,CAKZnB,SAAUZ,OAAOY,QAAP,CAAkBZ,OAAOY,QAAzB,CAAoClB,SAASE,MAL3C,CAMZoC,sBAAuBhC,OAAOgC,qBANlB,CAOZC,MAAOjC,OAAOiC,KAPF,CAQZC,gBAAiBlC,OAAOkC,eARZ,CASZC,YAAanC,OAAOmC,WATR,CAUZC,UAAWpC,OAAOoC,SAVN,CAWZC,QAASrC,OAAOqC,OAXJ,CAYZC,WAAYtC,OAAOsC,UAZP,CAAd,EAeA,GAAI,KAAKC,YAAT,CAAuB,CACrBC,aAAa,KAAKD,YAAlB,EACD,CAED,GAAIvC,OAAOyC,QAAP,GAAoB,CAAxB,CAA2B,CACzB,GAAMA,UAAWzC,OAAOyC,QAAP,CAAkB,CAAlB,CAAsBzC,OAAOyC,QAA7B,CAAwC,IAAzD,CACA,KAAKF,YAAL,CAAoBG,WAClB,KAAKrC,UAAL,CAAgBsC,IAAhB,CAAqB,IAArB,CAA2B,SAA3B,CADkB,CAElBF,QAFkB,CAApB,CAID,CAEDhC,sBAASmC,MAAT,CAAgB,KAAKrC,KAAL,CAAWC,QAA3B,CAAqC,CACnCqC,QAAS,CAD0B,CAEnCJ,SAAU,GAFyB,CAArC,EAGGK,KAHH,GAID,C,8CACUC,M,CAAQ,CACjB,KAAKnB,QAAL,CAAc,CACZjB,aAAc,KADF,CAAd,EADiB,GAIT0B,QAJS,CAIG,KAAK9B,KAJR,CAIT8B,OAJS,CAKjB,GAAIA,SAAW,MAAOA,QAAP,GAAmB,UAAlC,CAA8C,CAC5CA,QAAQU,MAAR,EACD,CACF,C,8CACUA,M,CAAQ,CACjBP,aAAa,KAAKD,YAAlB,EACA9B,sBAASmC,MAAT,CAAgB,KAAKrC,KAAL,CAAWC,QAA3B,CAAqC,CACnCqC,QAAS,CAD0B,CAEnCJ,SAAU,GAFyB,CAArC,EAGGK,KAHH,CAGS,KAAKE,UAAL,CAAgBL,IAAhB,CAAqB,IAArB,CAA2BI,MAA3B,CAHT,EAID,C,uCAEQ,iBACP,GAAI,KAAKxC,KAAL,CAAWI,YAAf,CAA6B,CAC3B,MACE,+BAAC,qBAAD,CAAU,IAAV,EAAe,MAAO,KAAKsC,aAAL,EAAtB,kDAEI,KAAK1C,KAAL,CAAW+B,UAAX,CACI,KAAK/B,KAAL,CAAW+B,UADf,CAGE,8BAAC,YAAD,EACE,MAAO,KAAK/B,KAAL,CAAW0B,KADpB,CAEE,OAAQ,KAAK1B,KAAL,CAAWwB,IAAX,GAAoB,QAF9B,CAGE,QAAS,KAAKxB,KAAL,CAAWwB,IAAX,GAAoB,SAH/B,CAIE,QAAS,KAAKxB,KAAL,CAAWwB,IAAX,GAAoB,SAJ/B,kDAME,8BAAC,UAAD,EAAM,MAAO,KAAKxB,KAAL,CAAW6B,SAAxB,kDAAoC,KAAK7B,KAAL,CAAWsB,IAA/C,CANF,CAOG,KAAKtB,KAAL,CAAWkB,UAAX,EACC,8BAAC,cAAD,EACE,MAAO,KAAKlB,KAAL,CAAW4B,WADpB,CAEE,QAAS,yBAAM,QAAK9B,UAAL,CAAgB,MAAhB,CAAN,EAFX,kDAIE,8BAAC,UAAD,EAAM,MAAO,KAAKE,KAAL,CAAW2B,eAAxB,kDACG,KAAK3B,KAAL,CAAWkB,UADd,CAJF,CARJ,CALN,CADF,CA4BD,CACD,MAAO,KAAP,CACD,C,4BAtI0ByB,gB,EAyI7BnD,eAAeoD,SAAf,aACKC,0BADL,EAEEnB,MAAOoB,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,CAEzBF,oBAAUG,MAFe,CAGzBH,oBAAUI,KAHe,CAApB,CAFT,GASA,GAAMC,sBAAuB,yCAC3B,2BAD2B,CAE3B,EAF2B,CAG3BC,8BAH2B,EAI3B5D,cAJ2B,CAA7B,C,QAMiCA,c,CAAxB2D,oB","file":"ToastContainer.js","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Platform, Animated, ViewPropTypes, Dimensions } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport { PLATFORM } from '../theme/variables/commonColor';\n\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { Toast } from './Toast';\n\nconst TOP_CENTER = (Dimensions.get(\"window\").height / 2) - 50;\n\nconst POSITION = {\n  ABSOLUTE: 'absolute',\n  BOTTOM: 'bottom',\n  TOP: 'top',\n  CENTER: 'center'\n};\n\nclass ToastContainer extends Component {\n  static toastInstance;\n  static show({ ...config }) {\n    this.toastInstance._root.showToast({ config });\n  }\n  static hide() {\n    if (this.toastInstance._root.getModalState()) {\n      this.toastInstance._root.closeToast('functionCall');\n    }\n  }\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fadeAnim: new Animated.Value(0),\n      modalVisible: false\n    }\n  }\n\n  getToastStyle() {\n    return {\n      position: POSITION.ABSOLUTE,\n      opacity: this.state.fadeAnim,\n      width: '100%',\n      elevation: 9,\n      paddingHorizontal: Platform.OS === PLATFORM.IOS ? 20 : 0,\n      top: this.state.position === POSITION.TOP ? 30 : (this.state.position === POSITION.CENTER ? TOP_CENTER :  undefined),\n      bottom:\n        this.state.position === POSITION.BOTTOM ? this.getTop() : undefined\n    };\n  }\n\n  getTop() {\n    if (Platform.OS === PLATFORM.IOS) {\n      return 30;\n    }\n    return 0;\n  }\n\n  getButtonText(buttonText) {\n    if (buttonText) {\n      if (buttonText.trim().length === 0) {\n        return undefined;\n      }\n      return buttonText;\n    }\n    return undefined;\n  }\n  getModalState() {\n    return this.state.modalVisible;\n  }\n\n  showToast({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: this.getButtonText(config.buttonText),\n      type: config.type,\n      position: config.position ? config.position : POSITION.BOTTOM,\n      supportedOrientations: config.supportedOrientations,\n      style: config.style,\n      buttonTextStyle: config.buttonTextStyle,\n      buttonStyle: config.buttonStyle,\n      textStyle: config.textStyle,\n      onClose: config.onClose,\n      customView: config.customView\n    });\n    // If we have a toast already open, cut off its close timeout so that it won't affect *this* toast.\n    if (this.closeTimeout) {\n      clearTimeout(this.closeTimeout);\n    }\n    // Set the toast to close after the duration.\n    if (config.duration !== 0) {\n      const duration = config.duration > 0 ? config.duration : 1500;\n      this.closeTimeout = setTimeout(\n        this.closeToast.bind(this, 'timeout'),\n        duration\n      );\n    }\n    // Fade the toast in now.\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 1,\n      duration: 200\n    }).start();\n  }\n  closeModal(reason) {\n    this.setState({\n      modalVisible: false\n    });\n    const { onClose } = this.state;\n    if (onClose && typeof onClose === 'function') {\n      onClose(reason);\n    }\n  }\n  closeToast(reason) {\n    clearTimeout(this.closeTimeout);\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 0,\n      duration: 200\n    }).start(this.closeModal.bind(this, reason));\n  }\n\n  render() {\n    if (this.state.modalVisible) {\n      return (\n        <Animated.View style={this.getToastStyle()}>\n          {\n            this.state.customView ? (\n                this.state.customView\n            ) : (\n              <Toast\n                style={this.state.style}\n                danger={this.state.type === 'danger'}\n                success={this.state.type === 'success'}\n                warning={this.state.type === 'warning'}\n              >\n                <Text style={this.state.textStyle}>{this.state.text}</Text>\n                {this.state.buttonText && (\n                  <Button\n                    style={this.state.buttonStyle}\n                    onPress={() => this.closeToast('user')}\n                  >\n                    <Text style={this.state.buttonTextStyle}>\n                      {this.state.buttonText}\n                    </Text>\n                  </Button>\n                )}\n              </Toast>\n            )\n          }\n        </Animated.View>\n      );\n    }\n    return null;\n  }\n}\n\nToastContainer.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledToastContainer = connectStyle(\n  'NativeBase.ToastContainer',\n  {},\n  mapPropsToStyleNames\n)(ToastContainer);\n\nexport { StyledToastContainer as ToastContainer };\n"]}